package malang.paradise.com.malangparadise.activity;

import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import malang.paradise.com.malangparadise.R;
import malang.paradise.com.malangparadise.adapter.KategoriAdapter;
import malang.paradise.com.malangparadise.fragment.AllFragment;
import malang.paradise.com.malangparadise.fragment.KategoriFragment;
import malang.paradise.com.malangparadise.inteface.RecyclerViewListClicked;
import malang.paradise.com.malangparadise.json.Kategori;
import malang.paradise.com.malangparadise.konfigurasi.konfigurasi;
import malang.paradise.com.malangparadise.request.RequestHandler;
import malang.paradise.com.malangparadise.request.Utils;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;

import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.view.KeyEvent;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;
import com.google.android.material.floatingactionbutton.FloatingActionButton;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class HomePage extends AppCompatActivity implements RecyclerViewListClicked {
    List<Kategori> kategoriList;
    RecyclerView recyclerViewKategori;
    public static String id_userr, usernamee, namaa, passwordd, imagee;
    private ProgressBar loading;

    public static String kategoriIntent = "Semua";

    private static final int PERIOD = 2000;
    private long lastPressedTime;

    private TextView err;

    private LinearLayout profile;
    private Button reload;
    private LinearLayout line;
    private LinearLayout pp;
    private LinearLayout search;
    SwipeRefreshLayout swipeRefreshLayout;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home_page);

        Utils.darkenStatusBar(this, R.color.colorPrimary);

        profile = findViewById(R.id.profile);
        search = findViewById(R.id.search);
        line = findViewById(R.id.line);
        pp = findViewById(R.id.pp);


        swipeRefreshLayout = findViewById(R.id.swipe);
        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                swipeRefreshLayout.setRefreshing(true);
                loadKategori();
            }
        });

        loadKategori();


        LinearLayoutManager layoutManager
                = new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false);

        recyclerViewKategori = findViewById(R.id.kategorirRecyclerView);
        recyclerViewKategori.setHasFixedSize(true);
        recyclerViewKategori.setLayoutManager(new LinearLayoutManager(HomePage.this));
        recyclerViewKategori.setLayoutManager(layoutManager);

        loading = findViewById(R.id.loading);
        err = findViewById(R.id.err);
        reload = findViewById(R.id.reload);

        reload.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                pp.setVisibility(View.INVISIBLE);
                loading.setVisibility(View.VISIBLE);
                err.setVisibility(View.INVISIBLE);
                reload.setVisibility(View.INVISIBLE);

                loadKategori();
            }
        });

        kategoriList = new ArrayList<>();


        profile.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(getApplicationContext(), Profile.class);
                intent.putExtra("id_user", id_userr);
                intent.putExtra("username", usernamee);
                intent.putExtra("nama", namaa);
                intent.putExtra("password", passwordd);
                intent.putExtra("image", imagee);
                startActivity(intent);
                finish();
            }
        });

        search.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(HomePage.this, SearchActivity.class);
                startActivity(intent);
                overridePendingTransition(android.R.anim.slide_in_left, android.R.anim.slide_out_right);
            }
        });

    }

    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (event.getKeyCode() == KeyEvent.KEYCODE_BACK) {
            switch (event.getAction()) {
                case KeyEvent.ACTION_DOWN:
                    if (event.getDownTime() - lastPressedTime < PERIOD) {
                        finish();
                    } else {
                        Toast.makeText(getApplicationContext(), "Tekan sekali lagi untuk keluar dari Aplikasi.",
                                Toast.LENGTH_SHORT).show();
                        lastPressedTime = event.getEventTime();
                    }
                    return true;
            }
        }
        return false;
    }


    private void loadKategori() {

        StringRequest stringRequest = new StringRequest(Request.Method.GET, konfigurasi.URL_PRODUCTS_KATEGORI,

                new Response.Listener<String>() {
                    @Override
                    public void onResponse(String response) {
                        try {
                            //converting the string to json array object
                            JSONArray array = new JSONArray(response);


                            //traversing through all the object
                            for (int i = 0; i < array.length(); i++) {

                                //getting product object from json array
                                JSONObject product = array.getJSONObject(i);

                                //adding the product to product list
                                kategoriList.add(new Kategori(
                                        product.getString("id_kategori"),
                                        product.getString("nama"),
                                        product.getString("gambar")
                                ));
                            }

                            KategoriAdapter adapter = new KategoriAdapter(HomePage.this, kategoriList, HomePage.this);

                            if (adapter != null) {
                                recyclerViewKategori.setAdapter(adapter);

                                loading.setVisibility(View.INVISIBLE);
                                line.setVisibility(View.VISIBLE);
                                pp.setVisibility(View.VISIBLE);

                                swipeRefreshLayout.setRefreshing(false);

                                FragmentManager fm = getSupportFragmentManager();
                                FragmentTransaction fragmentTransaction = fm.beginTransaction();

                                fragmentTransaction.add(R.id.frame_container, new AllFragment());
                                fragmentTransaction.commit();
                            } else {
                                Toast.makeText(getApplicationContext(), "null", Toast.LENGTH_SHORT).show();
                            }

//                            loading.dismiss();
                        } catch (JSONException e) {
                            e.printStackTrace();
                            pp.setVisibility(View.INVISIBLE);
                            loading.setVisibility(View.INVISIBLE);
                            err.setVisibility(View.VISIBLE);
                            reload.setVisibility(View.VISIBLE);
                            swipeRefreshLayout.setRefreshing(false);

                        }
                    }
                },
                new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        pp.setVisibility(View.INVISIBLE);
                        loading.setVisibility(View.INVISIBLE);
                        err.setVisibility(View.VISIBLE);
                        reload.setVisibility(View.VISIBLE);
                        swipeRefres